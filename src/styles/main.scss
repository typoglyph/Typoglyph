@import "vendorPrefixes";

/* See: http://www.mydevice.io/devices/ */
/* Note: These are minimum values */
$device-desktop-width: 1024px;
$device-phone-width: 320px;

$margins: 1vw;



/**********
 * Mixins *
 **********/

/* In cases where one device-* mixin is used, all device-* mixins must be used */
@mixin device-desktop {
	// Desktop is the default so include it regardless of what @media says (but this mixin should
	// still be used as future proofing - we may want to change the default some day
	//@media screen and (min-width: #{$device-desktop-width}) {
		@content;
	//}
}
@mixin device-phone {
	@media screen and /*(min-width: #{$device-phone-width}) and*/ (max-width: #{$device-desktop-width - 1px}) {
		@content;
	}
}


@mixin centerHorizontal {
	text-align: center;
	* { display: inline-block; }
}


/*
 * Spaces children an equal distance apart
 * See: https://css-tricks.com/equidistant-objects-with-css/
 */
@mixin equidistantHorizontal {
	text-align: justify;
	&:after {
		/* Ensures there are at least 2 lines of text so justification works */
		content: '';
		display: inline-block;
		width: 100%;
	}
	* { display: inline-block; }
}



html {
	@include device-desktop	{ font-size: 180%; }
	@include device-phone	{ font-size: 300%; }
	font: {
		family: 'Droid Sans', sans-serif;
		weight: 700;
	}
}

body {
	/*
	Disabling horizontal margins/padding is important for embeded iFrames which use @media queries.
	If an iFrame has a smaller width than its parent and the width of the parent is close to (for
	example) $device-tablet-width then "device-desktop" could be used by the parent and
	"device-tablet" could be used by the iFrame.
	*/
	margin: $margins 0px;
	padding: 0px;
}

/** See: https://github.com/davidjbradshaw/iframe-resizer#typical-setup */
iframe { width: 100% }



/***********
 * Buttons *
 ***********/

.buttonHolder {
	@include equidistantHorizontal;
	@include device-desktop {
		margin-left: 37.5vw;
		margin-right: 37.5vw;
	}
	@include device-phone {
		margin-left: 25vw;
		margin-right: 25vw;
	}
}

.button {
	@include device-desktop {
		width: 10vw;
		height: 10vw;
	}
	@include device-phone {
		width: 20vw;
		height: 20vw;
	}
	cursor: pointer;
}



/****************
 * Progress bar *
 ****************/

#progressBar {
	@include box-sizing(border-box);
	@include calc(width, "100% - #{2 * $margins}");
	@include device-desktop	{ height: 5vh; }
	@include device-phone	{ height: 5vh; }
	margin-left: $margins;
	margin-right: $margins;
	padding: 0.4vh;
	
	border: 1px solid #ccc;
	@include border-radius(1.2vh);
	
	* {
		display: inline-block;
		@include box-sizing(border-box);
		
		height: 100%;
		
		/* Prevents weird bug where segments get offset when the viewport is resized */
		vertical-align: top;
		
		/* Dividing line between this bar and the next */
		border-right: 1px solid #999;
		
		&:first-child {
			@include border-radius-tl(1vh);
			@include border-radius-bl(1vh);
		}
		&:last-child {
			/* Remove dividing line between this bar and the next (as there isn't a next) */
			border-right: none;
			@include border-radius-tr(1vh);
			@include border-radius-br(1vh);
		}
		&.correct { background: #4fa637; }
		&.incorrect { background: #db3026; }
	}
}



/**********************
 * Completion graphic *
 **********************/
 
#completionGraphic {
	position: fixed;
	left: 50vw;
	top: 50vh;
	@include translate(-50%, -50%);
	
	/* Allow click/touch events to pass through the element unaffected */
	/* Note: This is unsupported pre-IE11 */
	pointer-events: none;
	
	* {
		@include box-sizing(border-box);
		@include device-desktop	{ width: 30vw; }
		@include device-phone	{ width: 50vw; }
		padding: 5px;
	}
}



/***********
 * Puzzles *
 ***********/

#puzzleSentence,
#puzzleAnswer,
#puzzleOptions {
	@include centerHorizontal;
	@include device-desktop	{ margin: 2.5vw 5vw; }
	@include device-phone	{ margin: 2.5vw 5vw; }
	
	/* Make all text unselectable. "Note that it's a non-standard feature (i.e. not a part of any
	 * specification). It is not guaranteed to work everywhere [...]"
	 *     - http://stackoverflow.com/questions/826782/css-rule-to-disable-text-selection-highlighting#4407335 */
	@include user-select(none);
	cursor: default;
}


.puzzleGap {
	display: inline-block;
	
	@include device-desktop {
		width: 4vw;
		height: 4vw;
		margin: 0.6vw;
	}
	@include device-phone {
		width: 7vw;
		height: 7vw;
		margin: 1vw 1.5vw;
	}
	
	vertical-align: middle;
	
	/* Using a custom SVG for the border as "border: 1px dashed;" is broken in FFox (See: Bugzilla#382721) */
	background: {
		image: url("../images/border-dashed.svg");
		size: 100% 100%;
	}
	@include border-radius(999px);
}

/* Gaps which are filled with an option */
.puzzleGap:not(:empty) {}

/* Gaps which are NOT filled with an option */
.puzzleGap:empty {}


.puzzleOption {
	display: inline-block;
	@include box-sizing(border-box);
	
	/* Without this, options get offset relative to their parent gap when the viewport is small */
	vertical-align: top;
	
	/* Using a custom SVG for the border, mainly to stay consistent with .puzzleGap */
	background: {
		color: #eee;
		image: url("../images/border-solid.svg");
		size: 100% 100%;
	}
	
	@include border-radius(999px);
	@include cursor-grab;
}

/* Options which are inside a gap */
.puzzleGap > .puzzleOption {
	width: 100%;
	height: 100%;
	
	/* Must be the same as the element's height, without using 100% */
	/* Helps to vertically center the text */
	@include device-desktop	{ line-height: 4vw; }
	@include device-phone	{ line-height: 7vw; }
}

/* Options which are NOT inside a gap */
:not(.puzzleGap) > .puzzleOption {
	@include device-desktop {
		width: 5vw;
		height: 5vw;
		margin: 0.2vw 2vw;
	}
	@include device-phone {
		width: 10vw;
		height: 10vw;
		margin-left: 4vw;
		margin-right: 4vw;
	}
	
	/* Must be the same as the element's height, without using 100% */
	/* Helps to vertically center the text */
	@include device-desktop	{ line-height: 5vw; }
	@include device-phone	{ line-height: 10vw; }
}

/* Options which are being dragged around */
.puzzleOption.highlight {
	@include cursor-grabbing;
}
