/* Note: Any property starting with the comment "Default" will be overridden in a more specific
 * stylesheet. It is included in this stylesheet as a fallback, so if for some reason the more
 * specific stylesheet isn't available, there will be something to fall back on. */

@import "vendorPrefixes";



html {
	/* Default */ font-size: 180%;
	font-family: 'Droid Sans', sans-serif;
	font-weight: 700;
}



/**********
 * Mixins *
 **********/

@mixin centerHorizontal {
	text-align: center;
	* { display: inline-block; }
}


/*
 * Spaces children an equal distance apart
 * See: https://css-tricks.com/equidistant-objects-with-css/
 */
@mixin equidistantHorizontal {
	text-align: justify;
	&:after {
		/* Ensures there are at least 2 lines of text so justification works */
		content: '';
		display: inline-block;
		width: 100%;
	}
	* { display: inline-block; }
}



/***********
 * Buttons *
 ***********/

.buttonHolder {
	@include equidistantHorizontal;
	/* Default */ margin-left: 35vw;
	/* Default */ margin-right: 35vw;
}

.button {
	/* Default */ width: 10vw;
	/* Default */ height: 10vw;
	
	cursor: pointer;
}



/****************
 * Progress bar *
 ****************/

.progressBar {
	width: 100%;
	/* Default */ height: 5vh;
	padding: 0.4vh;
	
	border: 1px solid #ccc;
	@include border-radius(1.2vh);
}

.progressBar * {
	display: inline-block;
	@include box-sizing(border-box);
	
	height: 100%;
	
	/* Prevents progress bar segments getting offset from the bar when the viewport is resized */
	vertical-align: top;
	
	/* Dividing line between this bar and the next */
	border-right: 1px solid #999;
}
.progressBar *:first-child {
	@include border-radius-tl(1vh);
	@include border-radius-bl(1vh);
}
.progressBar *:last-child {
	/* No dividing line between this bar and the next (as there isn't a next) */
	border-right: none;
	@include border-radius-tr(1vh);
	@include border-radius-br(1vh);
}
.progressBar *.correct { background: #4fa637; }
.progressBar *.incorrect { background: #db3026; }



/**********************
 * Completion graphic *
 **********************/
 
#completionGraphicHolder {
	position: fixed;
	left: 50vw;
	top: 50vh;
	
	@include translate(-50%, -50%);
	
	/* Allow click/touch events to pass through the element unaffected */
	/* Note: This is unsupported pre-IE11 */
	pointer-events: none;
}
 
.completionGraphic {
	@include box-sizing(border-box);
	
	/* Default */ width: 30vw;
	padding: 5px;
}



/***********
 * Puzzles *
 ***********/

#puzzleSentence,
#puzzleAnswer,
#puzzleOptions {
	@include centerHorizontal;
	
	/* Make all text unselectable. "Note that it's a non-standard feature (i.e. not a part of any
	 * specification). It is not guaranteed to work everywhere [...]"
	 *     - http://stackoverflow.com/questions/826782/css-rule-to-disable-text-selection-highlighting#4407335 */
	@include user-select(none);
	cursor: default;
}


.puzzleGap {
	display: inline-block;
	
	/* Default */ width: 4vw;
	/* Default */ height: 4vw;
	/* Default */ margin-left: 0.6vw;
	/* Default */ margin-right: 0.6vw;
	/* Default */ margin-top: 0.6vw;
	/* Default */ margin-bottom: 0.6vw;
	
	vertical-align: middle;
	
	/* Using a custom SVG for the border as "border: 1px dashed;" is broken in FFox (See: Bugzilla#382721) */
	background-image: url("../images/border-dashed.svg");
	background-size: 100% 100%;
	
	@include border-radius(999px);
}

/* Gaps which are filled with an option */
.puzzleGap:not(:empty) {}

/* Gaps which are NOT filled with an option */
.puzzleGap:empty {}


.puzzleOption {
	display: inline-block;
	@include box-sizing(border-box);
	
	/* Without this, options get offset relative to their parent gap when the viewport is small */
	vertical-align: top;
	
	background: #eee;
	/* Using a custom SVG for the border, mainly to stay consistent with .puzzleGap */
	background-image: url("../images/border-solid.svg");
	background-size: 100% 100%;
	@include border-radius(999px);
	
	@include cursor-grab;
}

/* Options which are inside a gap */
.puzzleGap > .puzzleOption {
	width: 100%;
	height: 100%;
	
	/* Must be the same as the element's height, without using 100% */
	/* Default */ line-height: 4vw;
}

/* Options which are NOT inside a gap */
:not(.puzzleGap) > .puzzleOption {
	/* Default */ width: 5vw;
	/* Default */ height: 5vw;
	/* Default */ margin-left: 2vw;
	/* Default */ margin-right: 2vw;
	
	/* Must be the same as the element's height, without using 100% */
	/* Default */ line-height: 5vw;
}

/* Options which are being dragged around */
.puzzleOption.highlight {
	@include cursor-grabbing;
}
